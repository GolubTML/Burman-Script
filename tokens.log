KEYWORD -> func
IDENT -> add
SYMBOL -> (
IDENT -> a
SYMBOL -> ,
IDENT -> b
SYMBOL -> )
SYMBOL -> {
KEYWORD -> return
IDENT -> a
OPERATOR -> +
IDENT -> b
SYMBOL -> }
KEYWORD -> let
IDENT -> sum
OPERATOR -> =
IDENT -> add
SYMBOL -> (
DIGIT -> 1
SYMBOL -> ,
DIGIT -> 2
SYMBOL -> )
KEYWORD -> printn
IDENT -> sum
KEYWORD -> func
IDENT -> draw
SYMBOL -> (
IDENT -> width
SYMBOL -> ,
IDENT -> height
SYMBOL -> ,
IDENT -> x
SYMBOL -> ,
IDENT -> y
SYMBOL -> )
SYMBOL -> {
KEYWORD -> while
IDENT -> x
OPERATOR -> <
IDENT -> width
SYMBOL -> {
KEYWORD -> while
IDENT -> y
OPERATOR -> <
IDENT -> height
SYMBOL -> {
KEYWORD -> printn
STRING -> #
IDENT -> y
OPERATOR -> ++
SYMBOL -> }
IDENT -> x
OPERATOR -> ++
KEYWORD -> print
STRING -> 
SYMBOL -> }
SYMBOL -> }
KEYWORD -> let
IDENT -> i
OPERATOR -> =
DIGIT -> 0
KEYWORD -> let
IDENT -> j
OPERATOR -> =
DIGIT -> 0
IDENT -> draw
SYMBOL -> (
DIGIT -> 5
SYMBOL -> ,
DIGIT -> 5
SYMBOL -> ,
IDENT -> i
SYMBOL -> ,
IDENT -> j
SYMBOL -> )
